// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Tag           = require("../components/Tag.js");
var Icon          = require("../bindings/Icon.js");
var Link          = require("../bindings/gatsby/link.js");
var Curry         = require("bs-platform/lib/js/curry.js");
var Score         = require("../components/Score.js");
var React         = require("react");
var Config        = require("../Config.js");
var Helmet        = require("../bindings/gatsby/helmet.js");
var Vrroom        = require("vrroom/src/Vrroom.bs.js");
var TimeAgo       = require("../bindings/TimeAgo.js");
var ReasonReact   = require("reason-react/src/ReasonReact.js");
var Js_primitive  = require("bs-platform/lib/js/js_primitive.js");
var PackageStyles = require("../styles/PackageStyles.js");

((require('../../static/hljs.css')));

var component = ReasonReact.statelessComponent("Package");

function make(data, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var $$package = data.package;
      var match = $$package.license;
      var match$1 = $$package.type;
      var tmp = match$1 === "unpublished" ? React.createElement("span", {
              className: PackageStyles.unpublishedLabel
            }, Vrroom.Helpers[/* text */0]("unpublished")) : null;
      var tmp$1 = { };
      var tmp$2 = Js_primitive.null_undefined_to_opt($$package.homepageUrl);
      if (tmp$2) {
        tmp$1.href = tmp$2[0];
      }
      var tmp$3 = { };
      var tmp$4 = Js_primitive.null_undefined_to_opt($$package.repositoryUrl);
      if (tmp$4) {
        tmp$3.href = tmp$4[0];
      }
      var tmp$5 = { };
      var tmp$6 = Js_primitive.null_undefined_to_opt($$package.npmUrl);
      if (tmp$6) {
        tmp$5.href = tmp$6[0];
      }
      var tmp$7 = { };
      var tmp$8 = Js_primitive.null_undefined_to_opt($$package.issuesUrl);
      if (tmp$8) {
        tmp$7.href = tmp$8[0];
      }
      var tmp$9 = { };
      var tmp$10 = Js_primitive.null_undefined_to_opt($$package.docsUrl);
      if (tmp$10) {
        tmp$9.href = tmp$10[0];
      }
      return React.createElement("div", {
                  className: PackageStyles.root
                }, ReasonReact.element(/* None */0, /* None */0, Helmet.make(/* Some */[Config.titleTemplate($$package.name)], /* None */0, /* None */0, /* None */0, /* array */[])), React.createElement("header", {
                      className: PackageStyles.header($$package.type)
                    }, React.createElement("div", {
                          className: PackageStyles.props
                        }, ReasonReact.element(/* None */0, /* None */0, Curry._2(Vrroom.Control[/* IfSome */3][/* make */1], Js_primitive.null_undefined_to_opt($$package.stars), (function (stars) {
                                    return React.createElement("div", {
                                                className: PackageStyles.stars
                                              }, Vrroom.Helpers[/* text */0](stars), ReasonReact.element(/* None */0, /* None */0, Icon.Star[/* make */0](/* Some */[PackageStyles.starIcon], /* array */[])));
                                  }))), ReasonReact.element(/* None */0, /* None */0, Score.make($$package, /* array */[])), (match == null) ? React.createElement("div", {
                                className: PackageStyles.nolicense
                              }, Vrroom.Helpers[/* text */0]("No license")) : React.createElement("div", {
                                className: PackageStyles.license
                              }, Vrroom.Helpers[/* text */0](match)), React.createElement("div", {
                              className: PackageStyles.updated
                            }, ReasonReact.element(/* None */0, /* None */0, TimeAgo.make($$package.updated, /* array */[])))), React.createElement("div", {
                          className: PackageStyles.title
                        }, ReasonReact.element(/* None */0, /* None */0, Link.make($$package.slug, /* Some */[PackageStyles.name], /* None */0, /* array */[Vrroom.Helpers[/* text */0]($$package.name)])), React.createElement("span", {
                              className: PackageStyles.version
                            }, Vrroom.Helpers[/* text */0]($$package.version)), tmp), React.createElement("div", {
                          className: PackageStyles.fields
                        }, React.createElement("div", {
                              className: PackageStyles.description
                            }, Vrroom.Helpers[/* text */0]($$package.description)), React.createElement("div", {
                              className: PackageStyles.tags
                            }, ReasonReact.element(/* None */0, /* None */0, Icon.Tags[/* make */0](/* Some */[PackageStyles.tagsIcon], /* array */[])), ReasonReact.element(/* None */0, /* None */0, Curry._3(Vrroom.Control[/* Map */0][/* make */1], $$package.keywords, /* Some */[Vrroom.Helpers[/* text */0](" - ")], (function (keyword) {
                                        return ReasonReact.element(/* Some */[keyword], /* None */0, Tag.make(keyword, /* array */[]));
                                      }))))), React.createElement("div", {
                          className: PackageStyles.links
                        }, React.createElement("a", tmp$1, Vrroom.Helpers[/* text */0]("homepage")), React.createElement("a", tmp$3, Vrroom.Helpers[/* text */0]("repository")), React.createElement("a", tmp$5, Vrroom.Helpers[/* text */0]("npm")), React.createElement("a", tmp$7, Vrroom.Helpers[/* text */0]("issues")), React.createElement("a", tmp$9, Vrroom.Helpers[/* text */0]("documentation")))), React.createElement("div", {
                      className: PackageStyles.readme,
                      dangerouslySetInnerHTML: {
                        __html: $$package.readme
                      }
                    }));
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query PackageQuery($id: String!) {
      package: packages(id: { eq: $id }) {
        type
        id
        name
        version
        description
        keywords
        license
        updated
        stars
        score
        quality
        popularity
        maintenance
        readme
        homepageUrl
        repositoryUrl
        npmUrl
        issuesUrl

        slug
      }
    }
  `

;

var Control = 0;

var Styles = 0;

exports.Control   = Control;
exports.Styles    = Styles;
exports.component = component;
exports.make      = make;
exports.$$default = $$default;
exports.default   = $$default;
exports.__esModule= true;
/*  Not a pure module */
