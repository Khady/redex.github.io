// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Tag           = require("../components/Tag.js");
var Icon          = require("../vendor/icons/Icon.js");
var Link          = require("../../bindings/gatsby/link.js");
var $$Array       = require("bs-platform/lib/js/array.js");
var React         = require("react");
var Helpers       = require("../utils/Helpers.js");
var TimeAgo       = require("../vendor/TimeAgo.js");
var ReasonReact   = require("reason-react/src/ReasonReact.js");
var PackageStyles = require("../styles/PackageStyles.js");

var component = ReasonReact.statelessComponent("Package");

function make(data, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var $$package = data.package;
      var match = +($$package.type === "unpublished");
      var match$1 = $$package.stars;
      var match$2 = $$package.license;
      var match$3 = $$package.type;
      var tmp = match$3 === "unpublished" ? React.createElement("span", {
              className: PackageStyles.unpublishedLabel
            }, Helpers.text("unpublished")) : null;
      var keywords = $$package.keywords;
      return React.createElement("div", undefined, React.createElement("header", {
                      className: PackageStyles.header + (
                        match !== 0 ? " " + PackageStyles.unpublished : ""
                      )
                    }, React.createElement("div", {
                          className: PackageStyles.props
                        }, (match$1 == null) ? null : React.createElement("div", {
                                className: PackageStyles.stars
                              }, Helpers.text(match$1), ReasonReact.element(/* None */0, /* None */0, Icon.Star[/* make */0](/* Some */[PackageStyles.starIcon], /* array */[]))), (match$2 == null) ? React.createElement("div", {
                                className: PackageStyles.nolicense
                              }, Helpers.text("No license")) : React.createElement("div", {
                                className: PackageStyles.license
                              }, Helpers.text(match$2)), React.createElement("div", {
                              className: PackageStyles.updated
                            }, ReasonReact.element(/* None */0, /* None */0, TimeAgo.make($$package.updated, /* array */[])))), React.createElement("div", {
                          className: PackageStyles.title
                        }, ReasonReact.element(/* None */0, /* None */0, Link.make($$package.slug, /* Some */[PackageStyles.name], /* None */0, /* array */[Helpers.text($$package.name)])), React.createElement("span", {
                              className: PackageStyles.version
                            }, Helpers.text($$package.version)), tmp), React.createElement("div", {
                          className: PackageStyles.fields
                        }, React.createElement("div", {
                              className: PackageStyles.description
                            }, Helpers.text($$package.description)), keywords.length !== 0 ? React.createElement("div", {
                                className: PackageStyles.tags
                              }, ReasonReact.element(/* None */0, /* None */0, Icon.Tags[/* make */0](/* Some */[PackageStyles.tagsIcon], /* array */[])), $$Array.map((function (keyword) {
                                      return ReasonReact.element(/* Some */[keyword], /* None */0, Tag.make(keyword, /* array */[]));
                                    }), keywords)) : null), React.createElement("div", {
                          className: PackageStyles.links
                        }, React.createElement("a", undefined, Helpers.text("homepage")), React.createElement("a", {
                              href: "https://github.com/something/something"
                            }, Helpers.text("repository")), React.createElement("a", {
                              href: "https://www.npmjs.com" + $$package.name
                            }, Helpers.text("npm")), React.createElement("a", {
                              href: "https://github.com/something/something/issues" + $$package.name
                            }, Helpers.text("issues")), React.createElement("a", undefined, Helpers.text("documentation")))), React.createElement("div", {
                      className: PackageStyles.readme,
                      dangerouslySetInnerHTML: {
                        __html: $$package.readme
                      }
                    }));
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query PackageQuery($slug: String!) {
      package: packages(slug: { eq: $slug }) {
        type
        id
        name
        version
        description
        keywords
        license
        updated
        stars
        readme

        slug
      }
    }
  `

;

var Styles = 0;

exports.Styles    = Styles;
exports.component = component;
exports.make      = make;
exports.$$default = $$default;
exports.default   = $$default;
exports.__esModule= true;
/* component Not a pure module */
