// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Css        = require("bs-css/src/Css.js");
var Theme      = require("../styles/Theme.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

var common_000 = Css.display(/* Flex */3);

var common_001 = /* :: */[
  Css.justifyContent(/* SpaceBetween */5),
  /* :: */[
    Css.unsafe("padding", ".5em 1em"),
    /* :: */[
      Css.marginBottom(Css.em(0.5)),
      /* :: */[
        Css.boxShadow(Theme.Shadow[/* panel */1]),
        /* :: */[
          Css.selector("& a", /* :: */[
                Css.color(Theme.Color[/* link */4]),
                /* :: */[
                  Css.fontSize(Css.em(1.1)),
                  /* :: */[
                    Css.textDecoration(/* None */0),
                    /* [] */0
                  ]
                ]
              ]),
          /* [] */0
        ]
      ]
    ]
  ]
];

var common = /* :: */[
  common_000,
  common_001
];

function root(param) {
  if (param === "unpublished") {
    return Css.style(Pervasives.$at(common, /* :: */[
                    Css.unsafe("background", Theme.Panel[/* crosshatchBackground */1]),
                    /* [] */0
                  ]));
  } else {
    return Css.style(Pervasives.$at(common, /* :: */[
                    Css.backgroundColor(Theme.Panel[/* Color */0][/* background */0]),
                    /* [] */0
                  ]));
  }
}

var left = Css.style(/* [] */0);

var version = Css.style(/* :: */[
      Css.fontSize(Css.em(0.85)),
      /* :: */[
        Css.fontStyle(/* Italic */1),
        /* :: */[
          Css.marginLeft(Css.em(0.5)),
          /* [] */0
        ]
      ]
    ]);

function unpublishedLabel(param) {
  if (param === "unpublished") {
    return Css.style(/* :: */[
                Css.fontSize(Css.em(0.85)),
                /* :: */[
                  Css.fontStyle(/* Italic */1),
                  /* :: */[
                    Css.marginLeft(Css.em(0.5)),
                    /* :: */[
                      Css.color(Theme.Color[/* bad */6]),
                      /* [] */0
                    ]
                  ]
                ]
              ]);
  } else {
    return Css.style(/* :: */[
                Css.display(/* None */1),
                /* [] */0
              ]);
  }
}

var description = Css.style(/* :: */[
      Css.unsafe("textOverflow", "ellipsis"),
      /* :: */[
        Css.overflow(/* Hidden */1),
        /* [] */0
      ]
    ]);

var tagsIcon = Css.style(/* :: */[
      Css.opacity(0.25),
      /* [] */0
    ]);

var right = Css.style(/* :: */[
      Css.textAlign(/* Right */2),
      /* [] */0
    ]);

var updated = Css.style(/* :: */[
      Css.opacity(0.5),
      /* :: */[
        Css.fontSize(Css.em(0.85)),
        /* :: */[
          Css.unsafe("whiteSpace", "nowrap"),
          /* [] */0
        ]
      ]
    ]);

var license = Css.style(/* :: */[
      Css.opacity(0.5),
      /* :: */[
        Css.fontSize(Css.em(0.85)),
        /* :: */[
          Css.unsafe("whiteSpace", "nowrap"),
          /* [] */0
        ]
      ]
    ]);

var nolicense = Css.style(/* :: */[
      Css.color(Theme.Color[/* bad */6]),
      /* :: */[
        Css.fontSize(Css.em(0.85)),
        /* :: */[
          Css.unsafe("whiteSpace", "nowrap"),
          /* [] */0
        ]
      ]
    ]);

var stars = Css.style(/* :: */[
      Css.opacity(0.5),
      /* :: */[
        Css.fontSize(Css.em(0.85)),
        /* :: */[
          Css.unsafe("whiteSpace", "nowrap"),
          /* [] */0
        ]
      ]
    ]);

var starIcon = Css.style(/* :: */[
      Css.marginLeft(Css.em(0.25)),
      /* :: */[
        Css.transform(Css.translateY(Css.px(-1))),
        /* :: */[
          Css.opacity(0.5),
          /* [] */0
        ]
      ]
    ]);

exports.root             = root;
exports.left             = left;
exports.version          = version;
exports.unpublishedLabel = unpublishedLabel;
exports.description      = description;
exports.tagsIcon         = tagsIcon;
exports.right            = right;
exports.updated          = updated;
exports.license          = license;
exports.nolicense        = nolicense;
exports.stars            = stars;
exports.starIcon         = starIcon;
/* common Not a pure module */
