// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array     = require("bs-platform/lib/js/array.js");
var React       = require("react");
var Helpers     = require("../utils/Helpers.js");
var PackageList = require("../components/PackageList.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("Keywords");

function make(data, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return React.createElement("div", undefined, $$Array.map((function (keyword) {
                        return React.createElement("div", {
                                    key: keyword.name
                                  }, React.createElement("h2", undefined, Helpers.text(keyword.name)), ReasonReact.element(/* None */0, /* None */0, PackageList.make(keyword.packages, /* array */[])));
                      }), $$Array.map((function (edge) {
                            return edge.node;
                          }), data.keywords.edges)));
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query KeywordsQuery {
      keywords: allKeywordsJson(sort: { fields: [name] }) {
        edges {
          node {
            name

            packages {
              id
              name
              version
              description
              keywords
              license
              updated
              stars

              fields {
                slug
              }
            }
          }
        }
      }
    }
  `

;

exports.component = component;
exports.make      = make;
exports.$$default = $$default;
exports.default   = $$default;
exports.__esModule= true;
/* component Not a pure module */
