// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Icon             = require("../vendor/icons/Icon.js");
var Link             = require("../../bindings/gatsby/link.js");
var $$Array          = require("bs-platform/lib/js/array.js");
var React            = require("react");
var Styles           = require("../styles/Styles.js");
var Helpers          = require("../utils/Helpers.js");
var TimeAgo          = require("../vendor/TimeAgo.js");
var ReasonReact      = require("reason-react/src/ReasonReact.js");
var PackageSearchBox = require("../components/PackageSearchBox.js");

var component = ReasonReact.statelessComponent("Index");

function make(data, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var Styles$1 = Styles.Index[/* ListItem */3];
      var Styles$2 = Styles.Index[/* ListItem */3];
      return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, PackageSearchBox.make(/* array */[])), React.createElement("div", {
                      className: Styles.Index[/* keywords */0]
                    }, $$Array.map((function (keyword) {
                            return ReasonReact.element(/* None */0, /* None */0, Link.make(keyword.slug, /* None */0, /* None */0, /* array */[
                                            React.createElement("span", {
                                                  className: "label"
                                                }, Helpers.text(keyword.name)),
                                            React.createElement("span", {
                                                  className: "count"
                                                }, Helpers.text(keyword.count))
                                          ]));
                          }), $$Array.map((function (edge) {
                                return edge.node;
                              }), data.keywords.edges))), React.createElement("div", {
                      className: Styles.Index[/* lists */2]
                    }, React.createElement("div", undefined, React.createElement("h2", undefined, Helpers.text("Recent releases")), $$Array.map((function ($$package) {
                                return React.createElement("div", {
                                            key: $$package.name,
                                            className: Styles$1[/* root */0]
                                          }, React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make($$package.slug, /* Some */[Styles$1[/* name */1]], /* None */0, /* array */[Helpers.text($$package.name)])), React.createElement("span", {
                                                    className: Styles$1[/* version */2]
                                                  }, Helpers.text($$package.version))), React.createElement("div", {
                                                className: Styles$1[/* right */3]
                                              }, React.createElement("div", {
                                                    className: Styles$1[/* updated */4]
                                                  }, ReasonReact.element(/* None */0, /* None */0, TimeAgo.make($$package.updated, /* array */[])))));
                              }), $$Array.map((function (edge) {
                                    return edge.node;
                                  }), data.recentPackages.edges))), React.createElement("div", undefined, React.createElement("h2", undefined, Helpers.text("Most popular")), $$Array.map((function ($$package) {
                                var match = $$package.stars;
                                return React.createElement("div", {
                                            key: $$package.name,
                                            className: Styles$2[/* root */0]
                                          }, React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Link.make($$package.slug, /* Some */[Styles$2[/* name */1]], /* None */0, /* array */[Helpers.text($$package.name)])), React.createElement("span", {
                                                    className: Styles$2[/* version */2]
                                                  }, Helpers.text($$package.version))), React.createElement("div", {
                                                className: Styles$2[/* right */3]
                                              }, (match == null) ? null : React.createElement("div", {
                                                      className: Styles$2[/* stars */5]
                                                    }, Helpers.text(match), ReasonReact.element(/* None */0, /* None */0, Icon.Star[/* make */0](/* Some */[Styles$2[/* starIcon */6]], /* array */[])))));
                              }), $$Array.map((function (edge) {
                                    return edge.node;
                                  }), data.popularPackages.edges)))));
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.data, /* array */[]);
      }));


  export const query = graphql`
    query IndexQuery {
      recentPackages: allPackages(filter: { type: { eq: "published" } }, limit: 10, sort: { fields: [updated], order: DESC } ) {
        edges {
          node {
            ...package
          }
        }
      }

      popularPackages: allPackages(limit: 10, sort: { fields: [popularity], order: DESC } ) {
        edges {
          node {
            ...package
          }
        }
      }

      keywords: allKeywords(sort: { fields: [count], order: DESC } ) {
        edges {
          node {
            name
            count
            slug
          }
        }
      }
    }

    fragment package on Packages {
      name
      version
      description
      keywords
      license
      updated
      stars
      slug
    }
  `

;

exports.component = component;
exports.make      = make;
exports.$$default = $$default;
exports.default   = $$default;
exports.__esModule= true;
/* component Not a pure module */
